<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ufnet.ws.repository.UserInfoRepository">
	<resultMap id="UserInfoMap" type="UserInfo">
		<result column="account_id" property="accountId"/>
		<result column="user_name" property="userName"/>
		<result column="login_name" property="loginName"/>
		<result column="password" property="password"/>
		<result column="accounttype_id" property="accountTypeId"/>
		<result column="phone" property="phone"/>
		<result column="date_of_open" property="dateOfOpen"/>
		<result column="date_of_end" property="dateOfEnd"/>
		<result column="current_state" property="currentState"/>
		<result column="available_amount" property="availableAmount"/>
		<result column="remark" property="remark"/>
	</resultMap>
	<select id="selectList" resultMap="UserInfoMap">
		SELECT
			account_id,
			user_name,
			login_name,
			password,
			accounttype_id,
			phone,
			date_of_open,
			date_of_end,
			current_state,
			available_amount,
			remark
		FROM user_info
	</select>
	<select id="select" resultMap="UserInfoMap">
		SELECT
			account_id,
			user_name,
			login_name,
			password,
			accounttype_id,
			phone,
			date_of_open,
			date_of_end,
			current_state,
			available_amount,
			remark
		FROM user_info
		WHERE login_name = #{loginName}
	</select>
	<insert id="insert">
		INSERT INTO user_info (
			account_id,
			user_name,
			community_id,
			apt_no,
			login_name,
			password,
			accounttype_id,
			auth_type_id,
			auth_move,
			date_of_end,
			available_amount,
			available_time,
			available_flow,
			bandwidth,
			used_amount,
			used_flow,
			used_time,
			max_net_time,
			auto_down_interval,
			is_popup,
			need_real_ip,
			is_log,
			current_state,
			date_of_kaitong,
			last_login_time,
			login_session_id,
			max_online_users,
			sex,
			birthday,
			phone,
			mobile_phone,
			email,
			education_level_id,
			vocation_id,
			user_class,
			vip,
			register_type,
			certificate_type_id,
			certificate_no,
			date_of_apply,
			date_of_open,
			date_of_sign_contract,
			date_of_end_contract,
			is_install,
			is_wiring,
			vlan_id,
			switch_id,
			switch_port,
			sales,
			admin_id,
			building_no,
			reason_of_no_install,
			complex_index,
			pay_account_id,
			independent,
			remark,
			deny_agent,
			login_type,
			open_admin,
			second_line
		) VALUES (
			#{accountId},
			#{userName},
			#{communityId},
			#{aptNo},
			#{loginName},
			#{password},
			#{accountTypeId},
			#{authTypeId},
			#{authMove},
			#{dateOfEnd},
			#{availableAmount},
			#{availableTime},
			#{availableFlow},
			#{bandwidth},
			#{usedAmount},
			#{usedFlow},
			#{usedTime},
			#{maxNetTime},
			#{autoDownInterval},
			#{isPopup},
			#{needRealIp},
			#{isLog},
			#{currentState},
			#{dateOfKaitong},
			#{lastLoginTime},
			#{loginSessionId},
			#{maxOnlineUsers},
			#{sex},
			#{birthday},
			#{phone},
			#{mobilePhone},
			#{email},
			#{educationLevelId},
			#{vocationId},
			#{userClass},
			#{vip},
			#{registerType},
			#{certificateTypeId},
			#{certificateNo},
			#{dateOfApply},
			#{dateOfOpen},
			#{dateOfSignContract},
			#{dateOfEndContract},
			#{isInstall},
			#{isWiring},
			#{vlanId},
			#{switchId},
			#{switchPort},
			#{sales},
			#{adminId},
			#{buildingNo},
			#{reasonOfNoInstall},
			#{complexIndex},
			#{payAccountId},
			#{independent},
			#{remark},
			#{denyAgent},
			#{loginType},
			#{openAdmin},
			#{secondLine}
		)
	</insert>
	<update id="update">
		UPDATE user_info
		<set>
			<if test="availableAmount > 0">
				available_amount = #{availableAmount},
			</if>
			<if test="userName != null and userName != ''">
				user_name = #{userName},
			</if>
			<if test="password != null and password != ''">
				password = #{password},
			</if>
			<if test="accountTypeId != 0">
				accounttype_id = #{accountTypeId},
			</if>
			<if test="authTypeId != 0">
				auth_type_id = #{authTypeId},
			</if>
			<if test="bandwidth != 0">
				bandwidth = #{bandwidth},
			</if>
			<if test="dateOfEnd != null">
				date_of_end = #{dateOfEnd},
			</if>
			<if test="currentState != 0">
				current_state = #{currentState},
			</if>
			<if test="dateOfKaitong != null">
				date_of_kaitong = #{dateOfKaitong},
			</if>
			<if test="phone != null and phone != ''">
				phone = #{phone},
			</if>
			<if test="certificateNo != null and certificateNo != ''">
				certificate_no = #{certificateNo},
			</if>
			<if test="adminId != 0">
				admin_id = #{adminId},
			</if>
			<if test="remark != null and remark != ''">
				remark = #{remark},
			</if>
			<if test="openAdmin != 0">
				open_admin = #{openAdmin},
			</if>
		</set>
		<where>
			login_name = #{loginName}
		</where>
	</update>
	<delete id="delete">
		DELETE FROM user_info
		WHERE login_name = #{loginName}
	</delete>
	<select id="seq" resultType="int">
		SELECT accountid_seq.nextval FROM dual
	</select>
</mapper>